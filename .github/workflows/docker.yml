name: Build Docker Image

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  docker:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Build
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Compute version from tag (fallback to config)
      id: version
      run: |
        RAW="${GITHUB_REF_NAME}"
        CLEAN="${RAW#v}"
        if [ -z "$CLEAN" ] || [ "$CLEAN" = "$RAW" ] && [ -z "$RAW" ]; then
          CLEAN=$(grep -Eo 'var[[:space:]]+Version[[:space:]]*=[[:space:]]*"[^"]*"' config/config.go | cut -d'"' -f2 || true)
        fi
        echo "raw=$RAW" >> $GITHUB_OUTPUT
        echo "version=$CLEAN" >> $GITHUB_OUTPUT
        echo "Using version: ${CLEAN:-unknown} (tag: ${RAW:-none})

    - name: Get repository info
      id: repo
      run: |
        OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
        REPO=$(echo "${{ github.event.repository.name }}" | tr '[:upper:]' '[:lower:]')
        echo "owner=$OWNER" >> $GITHUB_OUTPUT
        echo "repo=$REPO" >> $GITHUB_OUTPUT

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ steps.repo.outputs.owner }}/${{ steps.repo.outputs.repo }}
        tags: |
          type=ref,event=tag
          type=raw,value=latest,enable={{is_default_branch}}
          type=raw,value=${{ steps.version.outputs.version }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          VERSION=${{ steps.version.outputs.version }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
